{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pravi/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/pravi/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/pravi/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/pravi/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pravi\\\\OneDrive\\\\Desktop\\\\mortgage\\\\src\\\\App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Table from './Table';\nimport Chart from './Chart';\nimport calculate from './calculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultOverpayment = {\n  month: '1',\n  year: '0',\n  amount: '0'\n};\nexport default _s(function () {\n  _s();\n\n  var _useState = useState('200000'),\n      _useState2 = _slicedToArray(_useState, 2),\n      initial = _useState2[0],\n      setInitial = _useState2[1];\n\n  var _useState3 = useState('5'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rate = _useState4[0],\n      setRate = _useState4[1];\n\n  var _useState5 = useState('25'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      years = _useState6[0],\n      setYears = _useState6[1];\n\n  var _useState7 = useState('0'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      monthlyOverpayment = _useState8[0],\n      setMonthlyOverpayment = _useState8[1];\n\n  var _useState9 = useState([defaultOverpayment]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      overpayments = _useState10[0],\n      setOverpayments = _useState10[1];\n\n  var updateOverpayment = function updateOverpayment(index) {\n    return function (_ref) {\n      var target = _ref.target;\n      return setOverpayments(overpayments.map(function (overpayment, i) {\n        return i === index ? _objectSpread(_objectSpread({}, overpayment), {}, _defineProperty({}, target.name, target.value)) : overpayment;\n      }));\n    };\n  };\n\n  var _calculate = calculate(+initial, +years, +rate, +monthlyOverpayment, overpayments),\n      monthlyPayment = _calculate.monthlyPayment,\n      payments = _calculate.payments;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-default\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-brand\",\n          children: \"Mortgage Overpayment Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Initial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              maxLength: 7,\n              value: initial,\n              onChange: function onChange(e) {\n                return setInitial(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              maxLength: 2,\n              value: years,\n              onChange: function onChange(e) {\n                return setYears(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: 0.1,\n              value: rate,\n              onChange: function onChange(e) {\n                return setRate(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Overpayment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Monthly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              maxLength: 5,\n              value: monthlyOverpayment,\n              onChange: function onChange(e) {\n                return setMonthlyOverpayment(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this), overpayments.map(function (_ref2, i) {\n            var year = _ref2.year,\n                month = _ref2.month,\n                amount = _ref2.amount;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                max: years,\n                value: year,\n                name: \"year\",\n                onChange: updateOverpayment(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                max: \"12\",\n                value: month,\n                name: \"month\",\n                onChange: updateOverpayment(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: amount,\n                name: \"amount\",\n                onChange: updateOverpayment(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, _this), i === overpayments.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-xs\",\n                onClick: function onClick() {\n                  return setOverpayments([].concat(_toConsumableArray(overpayments), [defaultOverpayment]));\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-xs\",\n                onClick: function onClick() {\n                  return setOverpayments(overpayments.filter(function (_, j) {\n                    return j !== i;\n                  }));\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, _this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Monthly Payment\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"money\",\n              children: (+monthlyOverpayment + monthlyPayment).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Chart, {\n            payments: payments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"col-sm-4\",\n        payments: payments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n}, \"yGUbzEYSKfBouDCuyBtR6onXJx4=\");","map":{"version":3,"sources":["C:/Users/pravi/OneDrive/Desktop/mortgage/src/App.js"],"names":["React","useState","Table","Chart","calculate","defaultOverpayment","month","year","amount","initial","setInitial","rate","setRate","years","setYears","monthlyOverpayment","setMonthlyOverpayment","overpayments","setOverpayments","updateOverpayment","index","target","map","overpayment","i","name","value","monthlyPayment","payments","e","length","filter","_","j","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport Table from './Table';\r\nimport Chart from './Chart';\r\nimport calculate from './calculations';\r\n\r\nconst defaultOverpayment = { month: '1', year: '0', amount: '0' };\r\n\r\nexport default () => {\r\n  const [initial, setInitial] = useState('200000');\r\n  const [rate, setRate] = useState('5');\r\n  const [years, setYears] = useState('25');\r\n  const [monthlyOverpayment, setMonthlyOverpayment] = useState('0');\r\n  const [overpayments, setOverpayments] = useState([defaultOverpayment]);\r\n\r\n  const updateOverpayment = index => ({ target }) =>\r\n    setOverpayments(\r\n      overpayments.map((overpayment, i) =>\r\n        i === index\r\n          ? { ...overpayment, [target.name]: target.value }\r\n          : overpayment\r\n      )\r\n    );\r\n\r\n  const { monthlyPayment, payments } = calculate(\r\n    +initial,\r\n    +years,\r\n    +rate,\r\n    +monthlyOverpayment,\r\n    overpayments\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-default\">\r\n        <div className=\"navbar-header\">\r\n          <div className=\"navbar-brand\">Mortgage Overpayment Calculator</div>\r\n        </div>\r\n      </nav>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-md-8 col-sm-12\">\r\n          <div className=\"col-sm-4\">\r\n            <div>\r\n              <h2>Initial</h2>\r\n              <label>Amount</label>\r\n              <input\r\n                maxLength={7}\r\n                value={initial}\r\n                onChange={e => setInitial(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Years</label>\r\n              <input\r\n                type=\"number\"\r\n                maxLength={2}\r\n                value={years}\r\n                onChange={e => setYears(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Rate</label>\r\n              <input\r\n                type=\"number\"\r\n                step={0.1}\r\n                value={rate}\r\n                onChange={e => setRate(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-8\">\r\n            <div>\r\n              <h2>Overpayment</h2>\r\n              <label>Monthly</label>\r\n              <input\r\n                type=\"number\"\r\n                maxLength={5}\r\n                value={monthlyOverpayment}\r\n                onChange={e => setMonthlyOverpayment(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Year</label>\r\n              <label>Month</label>\r\n              <label>Amount</label>\r\n            </div>\r\n            {overpayments.map(({ year, month, amount }, i) => (\r\n              <div key={i}>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max={years}\r\n                  value={year}\r\n                  name=\"year\"\r\n                  onChange={updateOverpayment(i)}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max=\"12\"\r\n                  value={month}\r\n                  name=\"month\"\r\n                  onChange={updateOverpayment(i)}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={amount}\r\n                  name=\"amount\"\r\n                  onChange={updateOverpayment(i)}\r\n                />\r\n\r\n                {i === overpayments.length - 1 ? (\r\n                  <button\r\n                    className=\"btn btn-xs\"\r\n                    onClick={() =>\r\n                      setOverpayments([...overpayments, defaultOverpayment])\r\n                    }\r\n                  >\r\n                    +\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-xs\"\r\n                    onClick={() =>\r\n                      setOverpayments(overpayments.filter((_, j) => j !== i))\r\n                    }\r\n                  >\r\n                    X\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"col-sm-12\">\r\n            <h2>\r\n              Monthly Payment\r\n              <span className=\"money\">\r\n                {(+monthlyOverpayment + monthlyPayment).toFixed(2)}\r\n              </span>\r\n            </h2>\r\n            <Chart payments={payments} />\r\n          </div>\r\n        </div>\r\n        <Table className=\"col-sm-4\" payments={payments} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}