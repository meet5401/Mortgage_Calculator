{"ast":null,"code":"import _toConsumableArray from \"C:/Users/pravi/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\pravi\\\\OneDrive\\\\Desktop\\\\mortgage\\\\src\\\\Table.js\",\n    _this = this;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (function (_ref) {\n  var payments = _ref.payments,\n      className = _ref.className;\n  var output = payments.filter(function (year, i) {\n    return i > 0 && (year.balance > 0 || year.interestYearly > 0);\n  }).reduce(function (acc, year, index) {\n    return {\n      interestTotal: acc.interestTotal + year.interestYearly,\n      overpaymentTotal: acc.overpaymentTotal + year.overpayment,\n      rows: [].concat(_toConsumableArray(acc.rows), [[year.partial ? year.partial + 'm' : index + 1, Math.round(year.interestYearly || 0), Math.round(year.overpayment), Math.round(year.balance)]])\n    };\n  }, {\n    interestTotal: 0,\n    overpaymentTotal: 0,\n    rows: []\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Overpayment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: output.rows.map(function (row, index) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map(function (d, i) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.toLocaleString()\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, _this);\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          children: Math.round(output.interestTotal).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: Math.round(output.overpaymentTotal).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n});","map":{"version":3,"sources":["C:/Users/pravi/OneDrive/Desktop/mortgage/src/Table.js"],"names":["React","payments","className","output","filter","year","i","balance","interestYearly","reduce","acc","index","interestTotal","overpaymentTotal","overpayment","rows","partial","Math","round","map","row","d","toLocaleString"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,gBAAe,gBAA6B;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC1C,MAAIC,MAAM,GAAGF,QAAQ,CAClBG,MADU,CACH,UAACC,IAAD,EAAOC,CAAP;AAAA,WAAaA,CAAC,GAAG,CAAJ,KAAUD,IAAI,CAACE,OAAL,GAAe,CAAf,IAAoBF,IAAI,CAACG,cAAL,GAAsB,CAApD,CAAb;AAAA,GADG,EAEVC,MAFU,CAGT,UAACC,GAAD,EAAML,IAAN,EAAYM,KAAZ;AAAA,WAAuB;AACrBC,MAAAA,aAAa,EAAEF,GAAG,CAACE,aAAJ,GAAoBP,IAAI,CAACG,cADnB;AAErBK,MAAAA,gBAAgB,EAAEH,GAAG,CAACG,gBAAJ,GAAuBR,IAAI,CAACS,WAFzB;AAGrBC,MAAAA,IAAI,+BACCL,GAAG,CAACK,IADL,IAEF,CACEV,IAAI,CAACW,OAAL,GAAeX,IAAI,CAACW,OAAL,GAAe,GAA9B,GAAoCL,KAAK,GAAG,CAD9C,EAEEM,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACG,cAAL,IAAuB,CAAlC,CAFF,EAGES,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACS,WAAhB,CAHF,EAIEG,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACE,OAAhB,CAJF,CAFE;AAHiB,KAAvB;AAAA,GAHS,EAgBT;AAAEK,IAAAA,aAAa,EAAE,CAAjB;AAAoBC,IAAAA,gBAAgB,EAAE,CAAtC;AAAyCE,IAAAA,IAAI,EAAE;AAA/C,GAhBS,CAAb;AAmBA,sBACE;AAAO,IAAA,SAAS,EAAEb,SAAlB;AAAA,4BACE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eASE;AAAA,gBACGC,MAAM,CAACY,IAAP,CAAYI,GAAZ,CAAgB,UAACC,GAAD,EAAMT,KAAN;AAAA,4BACf;AAAA,oBACGS,GAAG,CAACD,GAAJ,CAAQ,UAACE,CAAD,EAAIf,CAAJ;AAAA,gCACP;AAAA,wBAAae,CAAC,CAACC,cAAF;AAAb,eAAShB,CAAT;AAAA;AAAA;AAAA;AAAA,qBADO;AAAA,WAAR;AADH,WAASK,KAAT;AAAA;AAAA;AAAA;AAAA,iBADe;AAAA,OAAhB;AADH;AAAA;AAAA;AAAA;AAAA,aATF,eAkBE;AAAA,6BACE;AAAA,gCACE;AAAI,UAAA,OAAO,EAAE,CAAb;AAAA,oBACGM,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACS,aAAlB,EAAiCU,cAAjC;AADH;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAA,oBAAKL,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACU,gBAAlB,EAAoCS,cAApC;AAAL;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,iBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA8BD,CAlDD","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ payments, className }) => {\r\n  let output = payments\r\n    .filter((year, i) => i > 0 && (year.balance > 0 || year.interestYearly > 0))\r\n    .reduce(\r\n      (acc, year, index) => ({\r\n        interestTotal: acc.interestTotal + year.interestYearly,\r\n        overpaymentTotal: acc.overpaymentTotal + year.overpayment,\r\n        rows: [\r\n          ...acc.rows,\r\n          [\r\n            year.partial ? year.partial + 'm' : index + 1,\r\n            Math.round(year.interestYearly || 0),\r\n            Math.round(year.overpayment),\r\n            Math.round(year.balance)\r\n          ]\r\n        ]\r\n      }),\r\n      { interestTotal: 0, overpaymentTotal: 0, rows: [] }\r\n    );\r\n\r\n  return (\r\n    <table className={className}>\r\n      <thead>\r\n        <tr>\r\n          <th>Years</th>\r\n          <th>Interest</th>\r\n          <th>Overpayment</th>\r\n          <th>Balance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {output.rows.map((row, index) => (\r\n          <tr key={index}>\r\n            {row.map((d, i) => (\r\n              <td key={i}>{d.toLocaleString()}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td colSpan={2}>\r\n            {Math.round(output.interestTotal).toLocaleString()}\r\n          </td>\r\n          <td>{Math.round(output.overpaymentTotal).toLocaleString()}</td>\r\n          <td />\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}